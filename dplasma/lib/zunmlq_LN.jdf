extern "C" %{
/*
 * Copyright (c) 2010-2016 The University of Tennessee and The University
 *                         of Tennessee Research Foundation. All rights
 *                         reserved.
 * Copyright (c) 2013      Inria. All rights reserved.
 * $COPYRIGHT
 *
 *
 * @precisions normal z -> s d c
 *
 */
#include "dplasma/lib/dplasmajdf.h"
#include "parsec/data_dist/matrix/matrix.h"

%}

side      [type = "PLASMA_enum"]
trans     [type = "PLASMA_enum"]
descA     [type = "parsec_tiled_matrix_dc_t*"]
descB     [type = "parsec_tiled_matrix_dc_t*"]
descT     [type = "parsec_tiled_matrix_dc_t*"]
ib        [type = "int" hidden = on default = "descT->mb" ]
pool_0    [type = "parsec_memory_pool_t *" size = "((sizeof(parsec_complex64_t))*ib)*descT->nb"]


zunmlq(k, n)
  /* Execution Space */
  k = 0 .. descA->mt-1
  n = 0 .. descB->nt-1

  /* Locality */
  : descB( k, n )

  READ  A    <- A zunmlq_in_data_A0(k)   [type = UPPER_TILE]
  READ  T    <- T zunmlq_in_data_T1(k)   [type = LITTLE_T]
  RW    C    <- ( k == 0 ) ? descB(k,n)
             <- ( k >  0 ) ? A2 ztsmlq(k-1, k, n)
             -> ( k <  (descB->mt-1)) ? A1 ztsmlq(k, k+1, n)
             -> ( k == (descB->mt-1)) ? descB(k,n)

BODY
{
    int tempkm   = (k == (descB->mt-1)) ? (descB->m - k * descB->mb) : descB->mb;
    int tempnn   = (n == (descB->nt-1)) ? (descB->n - n * descB->nb) : descB->nb;
    int tempkmin = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int ldak = BLKLDD( descA, k );
    int ldbk = BLKLDD( descB, k );

    printlog("CORE_zunmlq(%d, %d)\n"
             "\t(side, trans, tempkm, tempnn, tempkmin, ib, A(%d,%d)[%p], ldak, T(%d,%d)[%p], descT->mb, B(%d,%d)[%p], ldbk, p_elem_A, descT->nb)\n",
             k, n, k, k, A, k, k, T, k, n, C);

#if !defined(PARSEC_DRY_RUN)
    void *p_elem_A = parsec_private_memory_pop( pool_0 );

    CORE_zunmlq(side, trans,
                tempkm, tempnn, tempkmin, ib,
                A /* descA->k,k) */, ldak,
                T /* descT->k,k) */, descT->mb,
                C /* descB->k,n) */, ldbk,
                p_elem_A, descT->nb );

    parsec_private_memory_push( pool_0, p_elem_A );
#endif  /* !defined(PARSEC_DRY_RUN) */
}
END

zunmlq_in_data_T1(k) [profile = off]
  /* Execution Space */
  k = 0 .. descA->mt-1

  /* Locality */
  : descT(k, k)

  READ  T    <- descT(k, k)                   [type = LITTLE_T]
             -> T zunmlq(k, 0 .. descB->nt-1) [type = LITTLE_T]

BODY
{
    /* nothing */
}
END

zunmlq_in_data_A0(k) [profile = off]
  /* Execution Space */
  k = 0 .. descA->mt-1

  /* Locality */
  : descA(k, k)

  READ  A    <- descA(k, k)                    [type = UPPER_TILE]
             -> A zunmlq(k, 0 .. descB->nt-1 ) [type = UPPER_TILE]

BODY
{
    /* nothing */
}
END

ztsmlq(k, m, n)
  /* Execution Space */
  k = 0     .. %{ return dplasma_imin((descA->nt-2),(descA->mt-1)); %}
  m = (k+1) .. (descB->mt-1)
  n = 0     .. (descB->nt-1)

  /* Locality */
  : descB(m,n)

  RW    A1   <- ( m == (k+1) ) ? C  zunmlq(k, n)
             <- ( m >  (k+1) ) ? A1 ztsmlq(k, m-1, n)
             -> ( m <  (descB->mt-1) ) ? A1 ztsmlq(k, m+1, n)
             -> ( m == (descB->mt-1) ) ? A1 ztsmlq_out_data_B0(k, n)
  RW    A2   <- ( k == 0 ) ? descB(m,n)
             <- ( k >  0 ) ? A2 ztsmlq(k-1, m, n)
             ->  (k == (descA->mt-1)) ? descB(m,n)
             -> ((k <  (descA->mt-1)) & (m == (k+1))) ? C  zunmlq(k+1, n)
             -> ((k <  (descA->mt-1)) & (m >  (k+1))) ? A2 ztsmlq(k+1, m, n)
  READ  V    <- V ztsmlq_in_data_A1(k, m)
  READ  T    <- T ztsmlq_in_data_T2(k, m)  [type = LITTLE_T]

BODY
{
    int tempnn   = (n == (descB->nt-1)) ? (descB->n - n * descB->nb) : descB->nb;
    int tempmm   = (m == (descB->mt-1)) ? (descB->m - m * descB->mb) : descB->mb;
    int tempkmin = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int ldbk = BLKLDD( descB, k );
    int ldbm = BLKLDD( descB, m );
    int ldak = BLKLDD( descA, k );
    int ldwork = ib;

    printlog("CORE_ztsmlq(%d, %d, %d)\n"
             "\t(side, trans, descB->mb, tempnn, tempmm, tempnn, tempkmin, ib, B(%d,%d)[%p], ldbk, B(%d,%d)[%p], ldbm, A(%d,%d)[%p], ldam, T(%d,%d)[%p], descT->mb, p_elem_A, ldwork)\n",
             k, m, n, k, n, A1, m, n, A2, m, k, V, m, k, T);

#if !defined(PARSEC_DRY_RUN)
    void *p_elem_A = parsec_private_memory_pop( pool_0 );

    CORE_ztsmlq(side, trans,
                descB->mb, tempnn, tempmm, tempnn, tempkmin, ib,
                A1 /* descB->k, n) */, ldbk,
                A2 /* descB->m, n) */, ldbm,
                V  /* descA->k, m) */, ldak,
                T  /* descT->k, m) */, descT->mb,
                p_elem_A, ldwork );

    parsec_private_memory_push( pool_0, p_elem_A );
#endif  /* !defined(PARSEC_DRY_RUN) */
}
END

ztsmlq_in_data_T2(k, m) [profile = off]
  /* Execution Space */
  k = 0     .. %{ return dplasma_imin((descB->mt-2),(descA->mt-1)); %}
  m = (k+1) .. (descB->mt-1)

  /* Locality */
  : descT(k, m)

  READ  T    <- descT(k, m)                         [type = LITTLE_T]
             -> T ztsmlq(k, m, 0 .. (descB->nt-1))   [type = LITTLE_T]

BODY
{
    /* nothing */
}
END

ztsmlq_in_data_A1(k, m) [profile = off]
  /* Execution Space */
  k = 0     .. %{ return dplasma_imin((descB->mt-2),(descA->mt-1)); %}
  m = (k+1) .. (descB->mt-1)

  /* Locality */
  : descA(k, m)

  READ  V    <- descA(k, m)
             -> V ztsmlq(k, m, 0 .. (descB->nt-1))

BODY
{
    /* nothing */
}
END

ztsmlq_out_data_B0(k, n) [profile = off]
  /* Execution Space */
  k = 0 .. %{ return dplasma_imin((descB->mt-2),(descA->mt-1)); %}
  n = 0 .. (descB->nt-1)

  /* Locality */
  : descB(k, n)

  READ  A1   <- A1 ztsmlq(k, descB->mt-1, n)
             -> descB(k, n)

BODY
{
    /* nothing */
}
END
